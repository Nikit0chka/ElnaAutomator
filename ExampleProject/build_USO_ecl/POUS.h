#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_STRUCT_TYPE(STRUCT_SINGLEOUTPUT,
  TIME WAIT_TIME;
    WORD INCOMMAND;
    BOOL INOPCCOMMANDSDISABLED;
    BOOL Q;
    DWORD STATUS;
    BOOL OPCCOMMANDSDISABLED;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
  )
__DECLARE_STRUCT_TYPE(IM_SINGLEOUTPUTS,
  STRUCT_SINGLEOUTPUT SO0;
    STRUCT_SINGLEOUTPUT SO1;
    STRUCT_SINGLEOUTPUT SO2;
    STRUCT_SINGLEOUTPUT SO3;
    STRUCT_SINGLEOUTPUT SO4;
    STRUCT_SINGLEOUTPUT SO5;
    STRUCT_SINGLEOUTPUT SO6;
    STRUCT_SINGLEOUTPUT SO7;
  )
__DECLARE_STRUCT_TYPE(STRUCT_SECTIONSWITCH,
  WORD INCOMMAND;
    DWORD STATUS;
    BYTE ONSTATUS;
    BOOL INOPCCOMMANDSDISABLED;
    BOOL SDVIG;
    BOOL NS;
    BOOL COMMANDFAULT;
    BOOL ACCIDENT;
    BOOL LOCAL;
    BOOL DISTANCE;
    BOOL OPCCOMMANDSDISABLED;
    BOOL LASTCMDISON;
    BOOL OFFKNA;
    BYTE BASKETSTATUS;
    BOOL ISVALIDREF_STATON;
    BOOL ISVALIDREF_STATOFF;
    BOOL ISVALIDREF_CMDON;
    BOOL ISVALIDREF_CMDOFF;
    BOOL ISVALIDREF_INBREAKCMDON;
    BOOL ISVALIDREF_INBREAKCMDOFF;
    BOOL BREAKCMDON;
    BOOL BREAKCMDOFF;
    BOOL ISVALIDREF_BASKETROLLEDIN;
    BOOL ISVALIDREF_BASKETROLLEDOUT;
    BOOL ISVALIDREF_BASKETTEST;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
    BOOL CMDON;
    BOOL CMDOFF;
    BOOL RELIABILITY;
  )
__DECLARE_STRUCT_TYPE(TYPE_RELIABLEBIT,
  BOOL VALUE;
    BOOL RELIABILITY;
    BOOL _INVERSED;
  )
__DECLARE_ARRAY_TYPE(__ARRAY_OF_TYPE_RELIABLEBIT_16,TYPE_RELIABLEBIT,[16])
__DECLARE_STRUCT_TYPE(STRUCT_DI,
  BOOL IMIT;
    WORD VALUE;
    WORD RELIABILITY;
    __ARRAY_OF_TYPE_RELIABLEBIT_16 BITS;
    BOOL BLCONNECT;
  )
__DECLARE_STRUCT_TYPE(DICONFIG,
  STRUCT_DI DI;
    STRUCT_DI DI1;
    STRUCT_DI DI2;
    STRUCT_DI DI3;
    STRUCT_DI DI4;
  )
__DECLARE_STRUCT_TYPE(TYPE_PROTECTIONTAGS,
  BYTE NOTHING;
    BYTE AOB;
    BYTE AOS;
    BYTE AOPOJ;
  )
__DECLARE_STRUCT_TYPE(STRUCT_SINGLESIGNAL,
  BOOL RELIABILITY;
    BOOL INVERSE;
    TIME DELAYON;
    TIME DELAYOFF;
    BOOL Q;
    DWORD STATUS;
    BOOL DISABLED_SIG;
  )
__DECLARE_STRUCT_TYPE(STRUCT_AIPROTECTION,
  BYTE CONTROLLIMIT;
    TIME DELAY;
    BYTE INTAG;
    BOOL INRUNONSTART;
    BOOL INCANRUN;
    BOOL INOPCCOMMANDSDISABLED;
    WORD INCOMMAND;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
    BYTE TAG;
    DWORD STATUS;
    BOOL CANRUN;
    BOOL OPCCOMMANDSDISABLED;
    BOOL ISRUNNING;
    BOOL HASERROR;
    BOOL ISENDED;
    BOOL REMONT;
    BOOL CHECK;
    BOOL SIGNALING;
    BOOL SIGNALINGTP;
    BOOL RUNONSTART;
  )
__DECLARE_STRUCT_TYPE(TDOUBLEDATA,
  UINT WFLAGS;
    LREAL DBLVALUE;
  )
__DECLARE_ARRAY_TYPE(__ARRAY_OF_BOOL_16,BOOL,[16])
__DECLARE_STRUCT_TYPE(STRUCT_DO,
  BOOL IMIT;
    BOOL BLCONNECT;
    WORD VALUE;
    __ARRAY_OF_BOOL_16 BITS;
  )
__DECLARE_STRUCT_TYPE(DOCONFIG,
  STRUCT_DO DO1;
    STRUCT_DO DO2;
    STRUCT_DO DO3;
    STRUCT_DO DO4;
    STRUCT_DO DO5;
  )
__DECLARE_STRUCT_TYPE(STRUCT_RESERVEIM2,
  BOOL VAR1;
    BOOL VAR2;
  )
__DECLARE_STRUCT_TYPE(STRUCT_KRAN,
  WORD INCOMMAND;
    DWORD STATUS;
    BYTE ONSTATUS;
    BOOL INOPCCOMMANDSDISABLED;
    BOOL SDVIG;
    BOOL NS;
    BOOL DP;
    BOOL COMMANDFAULT;
    BOOL ACCIDENT;
    BOOL AUTO;
    BOOL MANUAL;
    BOOL LOCAL;
    BOOL DISTANCE;
    BOOL ERRORPOWEROFF;
    BOOL ERRORBLOCK;
    BOOL SO;
    BOOL SZ;
    BOOL OPCCOMMANDSDISABLED;
    BOOL LASTCMDISON;
    BOOL ISVALIDREF_STATON;
    BOOL ISVALIDREF_STATOFF;
    BOOL ISVALIDREF_CMDON;
    BOOL ISVALIDREF_CMDOFF;
    BOOL ISVALIDREF_INSO;
    BOOL ISVALIDREF_INSZ;
    BOOL ISVALIDREF_INDP;
    TIME CONTINUEHOLDCOMMAND;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
    BOOL CMDON;
    BOOL CMDOFF;
    BOOL RELIABILITY;
  )
__DECLARE_STRUCT_TYPE(STRUCT_OILPUMP,
  WORD INCOMMAND;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
    DWORD STATUS;
    BYTE ONSTATUS;
    BOOL INOPCCOMMANDSDISABLED;
    BOOL SDVIG;
    BOOL NS;
    BOOL COMMANDFAULT;
    BOOL ACCIDENT;
    BOOL LOCAL;
    BOOL DISTANCE;
    BOOL BREAKCMDON;
    BOOL BREAKCMDOFF;
    BOOL OPCCOMMANDSDISABLED;
    BOOL LASTCMDISON;
    BOOL ISVALIDREF_STATON;
    BOOL ISVALIDREF_STATOFF;
    BOOL ISVALIDREF_CMDON;
    BOOL ISVALIDREF_CMDOFF;
    BOOL ISVALIDREF_INBREAKCMDON;
    BOOL ISVALIDREF_INBREAKCMDOFF;
    BOOL INBLOCKED;
    BOOL BLOCKED;
    BOOL OSNOVNOY;
    BOOL REZERVNY;
    BOOL CMDON;
    BOOL CMDOFF;
    BOOL RELIABILITY;
  )
__DECLARE_STRUCT_TYPE(STRUCT_SWITCH,
  WORD INCOMMAND;
    DWORD STATUS;
    BYTE ONSTATUS;
    BOOL INOPCCOMMANDSDISABLED;
    BOOL SDVIG;
    BOOL NS;
    BOOL COMMANDFAULT;
    BOOL ACCIDENT;
    BOOL AUTO;
    BOOL MANUAL;
    BOOL LOCAL;
    BOOL DISTANCE;
    BOOL ERRORPOWEROFF;
    BOOL ERRORBLOCK;
    BOOL BREAKCMDON;
    BOOL BREAKCMDOFF;
    BOOL OPCCOMMANDSDISABLED;
    BOOL LASTCMDISON;
    BOOL ISVALIDREF_STATON;
    BOOL ISVALIDREF_STATOFF;
    BOOL ISVALIDREF_CMDON;
    BOOL ISVALIDREF_CMDOFF;
    BOOL ISVALIDREF_INBREAKCMDON;
    BOOL ISVALIDREF_INBREAKCMDOFF;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
    BOOL CMDON;
    BOOL CMDOFF;
    BOOL RELIABILITY;
  )
__DECLARE_STRUCT_TYPE(IM_SINGLESIGNALS,
  STRUCT_SINGLESIGNAL SI0;
    STRUCT_SINGLESIGNAL SI1;
    STRUCT_SINGLESIGNAL SI2;
    STRUCT_SINGLESIGNAL SI3;
    STRUCT_SINGLESIGNAL SI4;
    STRUCT_SINGLESIGNAL SI5;
    STRUCT_SINGLESIGNAL SI6;
  )
__DECLARE_STRUCT_TYPE(IMCONFIG,
  STRUCT_KRAN KRAN1;
    STRUCT_KRAN KRAN4;
    STRUCT_KRAN KRAN2;
    STRUCT_KRAN KRAN3;
    STRUCT_OILPUMP NU;
    STRUCT_OILPUMP NU2;
    STRUCT_SWITCH AVOM1;
    STRUCT_SWITCH AVOM2;
    STRUCT_SWITCH AVOM3;
    STRUCT_SWITCH AVOM4;
    STRUCT_SECTIONSWITCH MV;
    STRUCT_SECTIONSWITCH SECTIONSWITCH1;
    IM_SINGLESIGNALS SINGLESIGNALS;
    IM_SINGLEOUTPUTS SINGLEOUTPUTS;
  )
__DECLARE_STRUCT_TYPE(STRUCT_DIPROTECTION,
  TIME DELAY;
    BYTE INTAG;
    BOOL INRUNONSTART;
    BOOL INCANRUN;
    BOOL INOPCCOMMANDSDISABLED;
    WORD INCOMMAND;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
    BYTE TAG;
    DWORD STATUS;
    BOOL CANRUN;
    BOOL OPCCOMMANDSDISABLED;
    BOOL ISRUNNING;
    BOOL HASERROR;
    BOOL ISENDED;
    BOOL REMONT;
    BOOL CHECK;
    BOOL SIGNALING;
    BOOL SIGNALINGTP;
    BOOL RUNONSTART;
  )
__DECLARE_STRUCT_TYPE(PROTECTIONSCONFIG,
  STRUCT_AIPROTECTION AP1;
    STRUCT_AIPROTECTION AIP1;
    STRUCT_AIPROTECTION AIP2;
    STRUCT_AIPROTECTION AIP3;
    STRUCT_DIPROTECTION DIP1;
    STRUCT_DIPROTECTION DIP2;
    STRUCT_DIPROTECTION DIP3;
    STRUCT_DIPROTECTION DIP4;
    STRUCT_DIPROTECTION DIP5;
  )
__DECLARE_STRUCT_TYPE(TYPE_STATUSAI,
  BYTE NOTDEFINED;
    BYTE LL;
    BYTE HL;
    BYTE NOTRELIABLE;
    BYTE NORMAL;
    BYTE LW;
    BYTE HW;
    BYTE LA;
    BYTE HA;
  )
__DECLARE_STRUCT_TYPE(TITEMAIN,
  UINT WFLAGS;
    UINT WRESERVED;
    LREAL DBLVALUE;
    ULINT NANOSEC;
    ULINT RESERVE;
  )
__DECLARE_STRUCT_TYPE(TITEMDIN,
  UINT WFLAGS;
    UINT WVALUE;
    ULINT NANOSEC;
    ULINT RESERVE;
  )
__DECLARE_STRUCT_TYPE(STRUCT_AI,
  LREAL VALUE;
    DWORD STATUS;
    BYTE INTERVAL;
    WORD INCOMMAND;
    BOOL BLCONNECT;
    LREAL DLL;
    LREAL DHL;
    LREAL DLA;
    LREAL DHA;
    LREAL DLW;
    LREAL DHW;
    LREAL LL;
    LREAL HL;
    LREAL LA;
    LREAL HA;
    LREAL LW;
    LREAL HW;
    BOOL ISVALIDREF_LA;
    BOOL ISVALIDREF_HA;
    BOOL ISVALIDREF_LW;
    BOOL ISVALIDREF_HW;
    LREAL INPLL;
    LREAL INPHL;
    LREAL CURRENTSHOTCIRCUIT;
    LREAL CURRENTBREAKCIRCUIT;
    LREAL MAXCHANGESPEED;
    LREAL MAXCHANGESPEEDDOWN;
    LREAL CHANGESPEED;
    LREAL HISTERESIS;
    LREAL APERTURFILTER;
    LREAL EXPONENTIALFILTER;
    LREAL RASSOGLASOVANIE;
    BOOL OPCCOMMANDSDISABLED;
    BOOL DISABLED_LA;
    BOOL DISABLED_HA;
    BOOL DISABLED_LW;
    BOOL DISABLED_HW;
    TIME DELAYLA;
    TIME DELAYLW;
    TIME DELAYHW;
    TIME DELAYHA;
    BOOL MINVALUE_ISVALIDREF;
    BOOL MAXVALUE_ISVALIDREF;
    LREAL MINVALUE;
    LREAL MAXVALUE;
    BOOL INOPCCOMMANDSDISABLED;
    BOOL IMIT;
    BOOL REMONT;
    BOOL NS;
    BOOL NS_MIN;
    BOOL NS_MAX;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
  )
__DECLARE_STRUCT_TYPE(AICONFIG,
  STRUCT_AI A1;
    STRUCT_AI A2;
  )
__DECLARE_STRUCT_TYPE(TWORDDATA,
  UINT WFLAGS;
    UINT WVALUE;
  )
__DECLARE_STRUCT_TYPE(TYPE_STATUSDUALINPUT,
  BYTE STATUS_NOTDEFINED;
    BYTE STATUS_ON;
    BYTE STATUS_OFF;
    BYTE STATUS_TRANSITIONAL;
    BYTE STATUS_ERROR;
  )
__DECLARE_STRUCT_TYPE(TYPE_ANALOGLIMITFLAGS,
  BYTE NONE;
    BYTE LL;
    BYTE LW;
    BYTE HW;
    BYTE LA;
    BYTE HA;
    BYTE HL;
  )
__DECLARE_STRUCT_TYPE(TYPE_BASKETSTATS,
  BYTE BASKET_NOTDEFINED;
    BYTE BASKET_ROLLEDIN;
    BYTE BASKET_ROLLEDOUT;
    BYTE BASKET_TRANSITIONAL;
    BYTE BASKET_ERROR;
    BYTE BASKET_TEST;
  )
__DECLARE_STRUCT_TYPE(TYPE_COMMANDANALOG,
  WORD CMD_SETUSTAVKI;
    WORD CMD_SETREMONT;
    WORD CMD_RESETREMONT;
    WORD CMD_KVITNOTRELIABLE;
  )
__DECLARE_STRUCT_TYPE(TYPE_COMMANDDUALINPUT,
  BYTE CMD_ON;
    BYTE CMD_OFF;
    BYTE CMD_RESET;
  )
__DECLARE_STRUCT_TYPE(STRUCT_RESERVEIM,
  BOOL VAR1;
    BOOL VAR2;
  )
__DECLARE_STRUCT_TYPE(STRUCT_DISCRETPARAMETR,
  UINT NEWVALUE;
    UINT CURRENTVALUE;
    BOOL INOPCCOMMANDSDISABLED;
    WORD INCOMMAND;
    WORD INCOMMAND_ALG;
    WORD INCOMMAND_ARM;
    DWORD STATUS;
    BOOL OPCCOMMANDSDISABLED;
    UINT VALUE;
  )
// FUNCTION
BOOL UNBLOCKALLIM(
  BOOL EN, 
  BOOL *__ENO, 
  IMCONFIG *__IM);
// FUNCTION
UDINT TWOUINT_TO_UDINT(
  BOOL EN, 
  BOOL *__ENO, 
  UINT VAL1, 
  UINT VAL2);
// FUNCTION
BOOL BLOCKALLPROTECTIONS(
  BOOL EN, 
  BOOL *__ENO, 
  PROTECTIONSCONFIG *__PROTECTIONS);
// FUNCTION
BOOL BLOCKALLIM(
  BOOL EN, 
  BOOL *__ENO, 
  IMCONFIG *__IM);
// FUNCTION
BOOL RESETAIPROTECTION(
  BOOL EN, 
  BOOL *__ENO, 
  STRUCT_AIPROTECTION *__PROTECTION);
// FUNCTION
BOOL RESETDIPROTECTION(
  BOOL EN, 
  BOOL *__ENO, 
  STRUCT_DIPROTECTION *__PROTECTION);
// FUNCTION
BOOL RESETALLPROTECTIONS(
  BOOL EN, 
  BOOL *__ENO, 
  PROTECTIONSCONFIG *__PROTECTIONS);
// FUNCTION
BOOL RESETALLSIGNALING(
  BOOL EN, 
  BOOL *__ENO, 
  PROTECTIONSCONFIG *__PROTECTIONS);
// FUNCTION
BOOL ANYANALOGSPS(
  BOOL EN, 
  BOOL *__ENO, 
  AICONFIG AI);
// FUNCTION
BOOL ANYANALOGSNS(
  BOOL EN, 
  BOOL *__ENO, 
  AICONFIG AI);
// FUNCTION
BOOL NSCEPEICONTROL(
  BOOL EN, 
  BOOL *__ENO, 
  IMCONFIG IM);
// FUNCTION
BOOL ENABLEAILIMITS(
  BOOL EN, 
  BOOL *__ENO, 
  AICONFIG *__AI);
// FUNCTION
BOOL ANYDISCRETPS(
  BOOL EN, 
  BOOL *__ENO, 
  IMCONFIG IM);
// FUNCTION
BOOL ANYDISCRETNS(
  BOOL EN, 
  BOOL *__ENO, 
  DICONFIG DI);
// FUNCTION
BOOL UNBLOCKALLPROTECTIONS(
  BOOL EN, 
  BOOL *__ENO, 
  PROTECTIONSCONFIG *__PROTECTIONS);
// FUNCTION
BOOL ANYPROTECTIONSIGNALING(
  BOOL EN, 
  BOOL *__ENO, 
  PROTECTIONSCONFIG PROTECTIONS);
// FUNCTION
BOOL ANYPROTECTIONINREMONT(
  BOOL EN, 
  BOOL *__ENO, 
  PROTECTIONSCONFIG PROTECTIONS);
// FUNCTION
BOOL RUNDIPROTECTION(
  BOOL EN, 
  BOOL *__ENO, 
  STRUCT_DIPROTECTION *__PROTECTION);
// FUNCTION
BOOL RUNAIPROTECTION(
  BOOL EN, 
  BOOL *__ENO, 
  STRUCT_AIPROTECTION *__PROTECTION);
// FUNCTION
BOOL AUTORUNPROTECTIONS(
  BOOL EN, 
  BOOL *__ENO, 
  PROTECTIONSCONFIG *__PROTECTIONS);
// FUNCTION
UDINT DIWVALUE_DIAG(
  BOOL EN, 
  BOOL *__ENO, 
  UINT VAL1, 
  UINT VAL2);
// FUNCTION
BOOL DISABLEAILIMITS(
  BOOL EN, 
  BOOL *__ENO, 
  AICONFIG *__AI);
// FUNCTION
BOOL REMONTALLPROTECTIONS(
  BOOL EN, 
  BOOL *__ENO, 
  PROTECTIONSCONFIG *__PROTECTIONS);
// FUNCTION
BOOL NSCEPEIUPRAVLENYA(
  BOOL EN, 
  BOOL *__ENO, 
  IMCONFIG IM);
// FUNCTION_BLOCK FB_DOSOURCEMLP
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(TWORDDATA,ARDOUT)
  __DECLARE_VAR(TITEMDIN,ERR_MOD)
  __DECLARE_VAR(STRUCT_DO,STRDO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(INT,BITNUMBER)

} FB_DOSOURCEMLP;

void FB_DOSOURCEMLP_init__(FB_DOSOURCEMLP *data__, BOOL retain);
// Code part
void FB_DOSOURCEMLP_body__(FB_DOSOURCEMLP *data__);
// FUNCTION_BLOCK FB_DI_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BOOL,IMIT)
  __DECLARE_VAR(STRUCT_DI,STRDI)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_DI_INIT;

void FB_DI_INIT_init__(FB_DI_INIT *data__, BOOL retain);
// Code part
void FB_DI_INIT_body__(FB_DI_INIT *data__);
// FUNCTION_BLOCK FB_SUNPACKERCOMMAND
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(WORD,COMMAND)
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,PARAMETR)
  __DECLARE_VAR(BYTE,CMD)

  // FB private variables - TEMP, private and located variables

} FB_SUNPACKERCOMMAND;

void FB_SUNPACKERCOMMAND_init__(FB_SUNPACKERCOMMAND *data__, BOOL retain);
// Code part
void FB_SUNPACKERCOMMAND_body__(FB_SUNPACKERCOMMAND *data__);
// FUNCTION_BLOCK FB_SWITCH
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,STATON)
  __DECLARE_VAR(BOOL,STATOFF)
  __DECLARE_VAR(BOOL,STATON_RELIABILITY)
  __DECLARE_VAR(BOOL,STATOFF_RELIABILITY)
  __DECLARE_VAR(STRUCT_SWITCH,STRSW)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INNS)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INACCIDENT)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INAUTO)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INMANUAL)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INLOCAL)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INDISTANCE)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INERRORPOWEROFF)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INERRORBLOCK)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INBREAKCMDON)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INBREAKCMDOFF)
  __DECLARE_VAR(BOOL,CMDON)
  __DECLARE_VAR(BOOL,CMDOFF)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,ONINIT)
  __DECLARE_VAR(BOOL,_STATON)
  __DECLARE_VAR(BOOL,_STATOFF)
  __DECLARE_VAR(BYTE,LASTONSTATUS)
  __DECLARE_VAR(BYTE,CMD)
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,LASTCMD)
  __DECLARE_VAR(BYTE,SOURCE_FOR_STATUS)
  __DECLARE_VAR(BYTE,CMD_FOR_STATUS)
  __DECLARE_VAR(BYTE,COMMAND_ERROR_FOR_STATUS)
  FB_SUNPACKERCOMMAND _SUNPACKERCOMMAND;
  __DECLARE_VAR(TYPE_STATUSDUALINPUT,_STATUSDUALINPUT)
  __DECLARE_VAR(TYPE_COMMANDDUALINPUT,_COMMANDDUALINPUT)
  __DECLARE_VAR(BOOL,_COMMANDERRORTIMER)
  __DECLARE_VAR(BOOL,RESETERRORTIMER)
  __DECLARE_VAR(BOOL,GETSDVIG)
  __DECLARE_VAR(BOOL,_CHANGWITHOUTCOMMAND)
  TON ERRORCMDTIMER;
  TON SDVIGRESET;
  TON _ERRORRESET;
  TOF OUTPUTSSETS;

} FB_SWITCH;

void FB_SWITCH_init__(FB_SWITCH *data__, BOOL retain);
// Code part
void FB_SWITCH_body__(FB_SWITCH *data__);
// FUNCTION_BLOCK FB_AIPROTECTION_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BYTE,CONTROLLIMIT)
  __DECLARE_VAR(TIME,DELAY)
  __DECLARE_VAR(BYTE,INTAG)
  __DECLARE_VAR(BOOL,INRUNONSTART)
  __DECLARE_VAR(STRUCT_AIPROTECTION,STR_AIP)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_AIPROTECTION_INIT;

void FB_AIPROTECTION_INIT_init__(FB_AIPROTECTION_INIT *data__, BOOL retain);
// Code part
void FB_AIPROTECTION_INIT_body__(FB_AIPROTECTION_INIT *data__);
// FUNCTION_BLOCK FB_SWITCH_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BOOL,ISVALIDREF_STATON)
  __DECLARE_VAR(BOOL,ISVALIDREF_STATOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_CMDON)
  __DECLARE_VAR(BOOL,ISVALIDREF_CMDOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_INBREAKCMDON)
  __DECLARE_VAR(BOOL,ISVALIDREF_INBREAKCMDOFF)
  __DECLARE_VAR(STRUCT_SWITCH,STR_SW)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_SWITCH_INIT;

void FB_SWITCH_INIT_init__(FB_SWITCH_INIT *data__, BOOL retain);
// Code part
void FB_SWITCH_INIT_body__(FB_SWITCH_INIT *data__);
// FUNCTION_BLOCK FB_DIPROTECTION_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(TIME,DELAY)
  __DECLARE_VAR(BYTE,INTAG)
  __DECLARE_VAR(BOOL,INRUNONSTART)
  __DECLARE_VAR(STRUCT_DIPROTECTION,STR_DIP)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_DIPROTECTION_INIT;

void FB_DIPROTECTION_INIT_init__(FB_DIPROTECTION_INIT *data__, BOOL retain);
// Code part
void FB_DIPROTECTION_INIT_body__(FB_DIPROTECTION_INIT *data__);
// FUNCTION_BLOCK FB_AIPROTECTION
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(STRUCT_AI,AI)
  __DECLARE_VAR(STRUCT_AIPROTECTION,STRAIP)

  // FB private variables - TEMP, private and located variables
  FB_SUNPACKERCOMMAND _SUNPACKERCOMMAND;
  TOF _SIGNALINGTP;
  __DECLARE_VAR(TYPE_STATUSAI,_STATUSAI)
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,CMD)
  __DECLARE_VAR(BYTE,LASTCMD)
  __DECLARE_VAR(BYTE,SOURCE_FOR_STATUS)
  __DECLARE_VAR(BYTE,CMD_FOR_STATUS)
  __DECLARE_VAR(BYTE,COMMAND_ERROR_FOR_STATUS)
  TON RESETCMDTIMER;
  __DECLARE_VAR(BOOL,RESETCMDTIMERPRIZNAK)
  TON SIGNALINTIMER;
  TON TIMER;
  R_TRIG SIGNALINGTRIG;
  F_TRIG SIGNALINGFTRIG;
  __DECLARE_VAR(BOOL,SIGNALINGAI)

} FB_AIPROTECTION;

void FB_AIPROTECTION_init__(FB_AIPROTECTION *data__, BOOL retain);
// Code part
void FB_AIPROTECTION_body__(FB_AIPROTECTION *data__);
// FUNCTION_BLOCK FB_DIPROTECTION
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(STRUCT_SINGLESIGNAL,DI)
  __DECLARE_VAR(STRUCT_DIPROTECTION,STRDIP)

  // FB private variables - TEMP, private and located variables
  FB_SUNPACKERCOMMAND _SUNPACKERCOMMAND;
  __DECLARE_VAR(TYPE_PROTECTIONTAGS,_PROTECTIONTAGS)
  TOF _SIGNALINGTP;
  TON TIMER;
  R_TRIG SIGNALINGTRIG;
  F_TRIG SIGNALINGFTRIG;
  __DECLARE_VAR(BOOL,SIGNALINGDI)
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,CMD)
  __DECLARE_VAR(BYTE,LASTCMD)
  __DECLARE_VAR(BYTE,SOURCE_FOR_STATUS)
  __DECLARE_VAR(BYTE,CMD_FOR_STATUS)
  __DECLARE_VAR(BYTE,COMMAND_ERROR_FOR_STATUS)
  TON RESETCMDTIMER;
  __DECLARE_VAR(BOOL,RESETCMDTIMERPRIZNAK)
  TON SIGNALINTIMER;
  R_TRIG RUNONSTART_TRIG;

} FB_DIPROTECTION;

void FB_DIPROTECTION_init__(FB_DIPROTECTION *data__, BOOL retain);
// Code part
void FB_DIPROTECTION_body__(FB_DIPROTECTION *data__);
// FUNCTION_BLOCK PROC_PROTECTION
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(PROTECTIONSCONFIG,PROTECTIONS)
  __DECLARE_EXTERNAL(AICONFIG,AI)
  __DECLARE_EXTERNAL(IMCONFIG,IM)
  FB_AIPROTECTION FB_AP1;
  FB_AIPROTECTION FB_AIP1;
  FB_AIPROTECTION FB_AIP2;
  FB_AIPROTECTION FB_AIP3;
  FB_DIPROTECTION FB_DIP1;
  FB_DIPROTECTION FB_DIP2;
  FB_DIPROTECTION FB_DIP3;
  FB_DIPROTECTION FB_DIP4;
  FB_DIPROTECTION FB_DIP5;

} PROC_PROTECTION;

void PROC_PROTECTION_init__(PROC_PROTECTION *data__, BOOL retain);
// Code part
void PROC_PROTECTION_body__(PROC_PROTECTION *data__);
// FUNCTION_BLOCK FB_KRAN_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BOOL,ISVALIDREF_STATON)
  __DECLARE_VAR(BOOL,ISVALIDREF_STATOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_CMDON)
  __DECLARE_VAR(BOOL,ISVALIDREF_CMDOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_INSO)
  __DECLARE_VAR(BOOL,ISVALIDREF_INSZ)
  __DECLARE_VAR(BOOL,ISVALIDREF_INDP)
  __DECLARE_VAR(TIME,CONTINUEHOLDCOMMAND)
  __DECLARE_VAR(STRUCT_KRAN,STR_KR)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_KRAN_INIT;

void FB_KRAN_INIT_init__(FB_KRAN_INIT *data__, BOOL retain);
// Code part
void FB_KRAN_INIT_body__(FB_KRAN_INIT *data__);
// FUNCTION_BLOCK FB_OILPUMP_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BOOL,ISVALIDREF_STATON)
  __DECLARE_VAR(BOOL,ISVALIDREF_STATOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_CMDON)
  __DECLARE_VAR(BOOL,ISVALIDREF_CMDOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_INBREAKCMDON)
  __DECLARE_VAR(BOOL,ISVALIDREF_INBREAKCMDOFF)
  __DECLARE_VAR(STRUCT_OILPUMP,STR_OP)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_OILPUMP_INIT;

void FB_OILPUMP_INIT_init__(FB_OILPUMP_INIT *data__, BOOL retain);
// Code part
void FB_OILPUMP_INIT_body__(FB_OILPUMP_INIT *data__);
// FUNCTION_BLOCK FB_SECTIONSWITCH_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BOOL,ISVALIDREF_STATON)
  __DECLARE_VAR(BOOL,ISVALIDREF_STATOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_CMDON)
  __DECLARE_VAR(BOOL,ISVALIDREF_CMDOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_INBREAKCMDON)
  __DECLARE_VAR(BOOL,ISVALIDREF_INBREAKCMDOFF)
  __DECLARE_VAR(BOOL,ISVALIDREF_BASKETROLLEDIN)
  __DECLARE_VAR(BOOL,ISVALIDREF_BASKETROLLEDOUT)
  __DECLARE_VAR(BOOL,ISVALIDREF_BASKETTEST)
  __DECLARE_VAR(STRUCT_SECTIONSWITCH,STR_SW)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_SECTIONSWITCH_INIT;

void FB_SECTIONSWITCH_INIT_init__(FB_SECTIONSWITCH_INIT *data__, BOOL retain);
// Code part
void FB_SECTIONSWITCH_INIT_body__(FB_SECTIONSWITCH_INIT *data__);
// FUNCTION_BLOCK FB_SINGLESIGNAL_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BOOL,INVERSE)
  __DECLARE_VAR(TIME,DELAYON)
  __DECLARE_VAR(TIME,DELAYOFF)
  __DECLARE_VAR(STRUCT_SINGLESIGNAL,STR_SS)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_SINGLESIGNAL_INIT;

void FB_SINGLESIGNAL_INIT_init__(FB_SINGLESIGNAL_INIT *data__, BOOL retain);
// Code part
void FB_SINGLESIGNAL_INIT_body__(FB_SINGLESIGNAL_INIT *data__);
// FUNCTION_BLOCK FB_SINGLEOUTPUT_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BOOL,INOPCCOMMANDSDISABLED)
  __DECLARE_VAR(TIME,WAIT_TIME)
  __DECLARE_VAR(STRUCT_SINGLEOUTPUT,STR_SO)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_SINGLEOUTPUT_INIT;

void FB_SINGLEOUTPUT_INIT_init__(FB_SINGLEOUTPUT_INIT *data__, BOOL retain);
// Code part
void FB_SINGLEOUTPUT_INIT_body__(FB_SINGLEOUTPUT_INIT *data__);
// FUNCTION_BLOCK PROC_IM_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,INIT)
  __DECLARE_VAR(UINT,INITIALES)

  // FB private variables - TEMP, private and located variables
  FB_KRAN_INIT STKR_INI;
  FB_SWITCH_INIT STSW_INI;
  FB_OILPUMP_INIT STOP_INI;
  FB_SECTIONSWITCH_INIT STSSW_INI;
  FB_SINGLESIGNAL_INIT STSS_INI;
  FB_SINGLEOUTPUT_INIT STSO_INI;
  __DECLARE_VAR(UINT,INITS)
  __DECLARE_EXTERNAL(IMCONFIG,IM)

} PROC_IM_INIT;

void PROC_IM_INIT_init__(PROC_IM_INIT *data__, BOOL retain);
// Code part
void PROC_IM_INIT_body__(PROC_IM_INIT *data__);
// FUNCTION_BLOCK FB_AI_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(LREAL,DLL)
  __DECLARE_VAR(LREAL,DHL)
  __DECLARE_VAR(LREAL,DLA)
  __DECLARE_VAR(LREAL,DHA)
  __DECLARE_VAR(LREAL,DLW)
  __DECLARE_VAR(LREAL,DHW)
  __DECLARE_VAR(BOOL,ISVALIDREF_LA)
  __DECLARE_VAR(BOOL,ISVALIDREF_HA)
  __DECLARE_VAR(BOOL,ISVALIDREF_LW)
  __DECLARE_VAR(BOOL,ISVALIDREF_HW)
  __DECLARE_VAR(TIME,DELAYLA)
  __DECLARE_VAR(TIME,DELAYLW)
  __DECLARE_VAR(TIME,DELAYHW)
  __DECLARE_VAR(TIME,DELAYHA)
  __DECLARE_VAR(LREAL,INPLL)
  __DECLARE_VAR(LREAL,INPHL)
  __DECLARE_VAR(LREAL,CURRENTSHOTCIRCUIT)
  __DECLARE_VAR(LREAL,CURRENTBREAKCIRCUIT)
  __DECLARE_VAR(LREAL,MAXCHANGESPEED)
  __DECLARE_VAR(LREAL,MAXCHANGESPEEDDOWN)
  __DECLARE_VAR(LREAL,HISTERESIS)
  __DECLARE_VAR(LREAL,APERTURFILTER)
  __DECLARE_VAR(LREAL,EXPONENTIALFILTER)
  __DECLARE_VAR(LREAL,RASSOGLASOVANIE)
  __DECLARE_VAR(BOOL,INOPCCOMMANDSDISABLED)
  __DECLARE_VAR(STRUCT_AI,STRAI)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_AI_INIT;

void FB_AI_INIT_init__(FB_AI_INIT *data__, BOOL retain);
// Code part
void FB_AI_INIT_body__(FB_AI_INIT *data__);
// FUNCTION_BLOCK PROC_AI_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,INIT)
  __DECLARE_VAR(UINT,INITIALES)

  // FB private variables - TEMP, private and located variables
  FB_AI_INIT STAI_INI;
  __DECLARE_VAR(UINT,INITS)
  __DECLARE_EXTERNAL(AICONFIG,AI)

} PROC_AI_INIT;

void PROC_AI_INIT_init__(PROC_AI_INIT *data__, BOOL retain);
// Code part
void PROC_AI_INIT_body__(PROC_AI_INIT *data__);
// FUNCTION_BLOCK FB_AISOURCEMLP
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(TITEMAIN,ARAIN)
  __DECLARE_VAR(TITEMDIN,ERR_MOD)
  __DECLARE_VAR(STRUCT_AI,STRAI)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(TYPE_STATUSAI,_STATUSAI)
  __DECLARE_VAR(TYPE_COMMANDANALOG,_COMMANDANALOG)
  FB_SUNPACKERCOMMAND _SUNPACKERCOMMAND;
  __DECLARE_VAR(TYPE_ANALOGLIMITFLAGS,_ANALOGLIMITFLAGS)
  __DECLARE_VAR(BOOL,NOTRELIABLE)
  __DECLARE_VAR(LREAL,_LASTVALUE)
  TON RESETCMDTIMER;
  TON _LASTVALUETIMER;
  __DECLARE_VAR(BOOL,RESETCMDTIMERPRIZNAK)
  __DECLARE_VAR(LREAL,K)
  __DECLARE_VAR(LREAL,B)
  __DECLARE_VAR(LREAL,AP)
  __DECLARE_VAR(LREAL,RAZNITSA)
  __DECLARE_VAR(LREAL,RABS)
  __DECLARE_VAR(LREAL,H)
  __DECLARE_VAR(LREAL,MISMATCH)
  __DECLARE_VAR(BYTE,PARAMETR)
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,CMD)
  __DECLARE_VAR(BYTE,LASTCMD)
  __DECLARE_VAR(BYTE,SOURCE_FOR_STATUS)
  __DECLARE_VAR(BYTE,CMD_FOR_STATUS)
  __DECLARE_VAR(BYTE,COMMAND_ERROR_FOR_STATUS)
  __DECLARE_VAR(BOOL,ONINIT)
  R_TRIG OFF_TRIG;
  R_TRIG ON_TRIG;
  R_TRIG REMONT_TRIG;
  R_TRIG LL_TRIG;
  R_TRIG HL_TRIG;
  R_TRIG NORMAL_TRIG;
  R_TRIG NEDOSTOVER_TRIG;

} FB_AISOURCEMLP;

void FB_AISOURCEMLP_init__(FB_AISOURCEMLP *data__, BOOL retain);
// Code part
void FB_AISOURCEMLP_body__(FB_AISOURCEMLP *data__);
// FUNCTION_BLOCK PROC_AI
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  FB_AISOURCEMLP FB_A1;
  FB_AISOURCEMLP FB_A2;
  __DECLARE_EXTERNAL(AICONFIG,AI)
  __DECLARE_EXTERNAL(TITEMAIN,ARAIN_0)
  __DECLARE_EXTERNAL(TITEMAIN,ARAIN_1)
  __DECLARE_EXTERNAL(LREAL,AI_0_DBLVALUE)
  __DECLARE_EXTERNAL(LREAL,AI_1_DBLVALUE)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_0)

} PROC_AI;

void PROC_AI_init__(PROC_AI *data__, BOOL retain);
// Code part
void PROC_AI_body__(PROC_AI *data__);
// FUNCTION_BLOCK OPC_AI_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(AICONFIG,AI)
  __DECLARE_EXTERNAL(LREAL,AI_A1_HW)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWHW)
  __DECLARE_EXTERNAL(LREAL,AI_A1_HA)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWHA)
  __DECLARE_EXTERNAL(LREAL,AI_A1_LA)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWLA)
  __DECLARE_EXTERNAL(LREAL,AI_A1_LW)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWLW)
  __DECLARE_EXTERNAL(LREAL,AI_A1_HL)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWHL)
  __DECLARE_EXTERNAL(LREAL,AI_A1_LL)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWLL)
  __DECLARE_EXTERNAL(LREAL,AI_A2_HW)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWHW)
  __DECLARE_EXTERNAL(LREAL,AI_A2_HA)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWHA)
  __DECLARE_EXTERNAL(LREAL,AI_A2_LA)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWLA)
  __DECLARE_EXTERNAL(LREAL,AI_A2_LW)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWLW)
  __DECLARE_EXTERNAL(LREAL,AI_A2_HL)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWHL)
  __DECLARE_EXTERNAL(LREAL,AI_A2_LL)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWLL)

} OPC_AI_INIT;

void OPC_AI_INIT_init__(OPC_AI_INIT *data__, BOOL retain);
// Code part
void OPC_AI_INIT_body__(OPC_AI_INIT *data__);
// FUNCTION_BLOCK OPC_AI_GET
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(AICONFIG,AI)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWHW)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWHA)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWLA)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWLW)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWHL)
  __DECLARE_EXTERNAL(LREAL,AI_A1_NEWLL)
  __DECLARE_EXTERNAL(UINT,AI_A1_COMMAND)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWHW)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWHA)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWLA)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWLW)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWHL)
  __DECLARE_EXTERNAL(LREAL,AI_A2_NEWLL)
  __DECLARE_EXTERNAL(UINT,AI_A2_COMMAND)

} OPC_AI_GET;

void OPC_AI_GET_init__(OPC_AI_GET *data__, BOOL retain);
// Code part
void OPC_AI_GET_body__(OPC_AI_GET *data__);
// FUNCTION_BLOCK FB_DO_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,DATA_INI)
  __DECLARE_VAR(BOOL,IMIT)
  __DECLARE_VAR(STRUCT_DO,STRDO)
  __DECLARE_VAR(BOOL,INIT)

  // FB private variables - TEMP, private and located variables

} FB_DO_INIT;

void FB_DO_INIT_init__(FB_DO_INIT *data__, BOOL retain);
// Code part
void FB_DO_INIT_body__(FB_DO_INIT *data__);
// FUNCTION_BLOCK FB_KRAN
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,STATON)
  __DECLARE_VAR(BOOL,STATOFF)
  __DECLARE_VAR(BOOL,STATON_RELIABILITY)
  __DECLARE_VAR(BOOL,STATOFF_RELIABILITY)
  __DECLARE_VAR(STRUCT_KRAN,STRKR)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INNS)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INACCIDENT)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INAUTO)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INMANUAL)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INLOCAL)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INDISTANCE)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INERRORPOWEROFF)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INERRORBLOCK)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INSO)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INSZ)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INDP)
  __DECLARE_VAR(BOOL,CMDON)
  __DECLARE_VAR(BOOL,CMDOFF)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,ONINIT)
  __DECLARE_VAR(BOOL,_STATON)
  __DECLARE_VAR(BOOL,_STATOFF)
  __DECLARE_VAR(BOOL,GETSDVIG)
  __DECLARE_VAR(BYTE,LASTONSTATUS)
  __DECLARE_VAR(BYTE,CMD)
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,LASTCMD)
  __DECLARE_VAR(BYTE,SOURCE_FOR_STATUS)
  __DECLARE_VAR(BYTE,CMD_FOR_STATUS)
  __DECLARE_VAR(BYTE,COMMAND_ERROR_FOR_STATUS)
  FB_SUNPACKERCOMMAND _SUNPACKERCOMMAND;
  __DECLARE_VAR(TYPE_STATUSDUALINPUT,_STATUSDUALINPUT)
  __DECLARE_VAR(TYPE_COMMANDDUALINPUT,_COMMANDDUALINPUT)
  __DECLARE_VAR(BOOL,_COMMANDERRORTIMER)
  __DECLARE_VAR(BOOL,RESETERRORTIMER)
  __DECLARE_VAR(BOOL,_CHANGWITHOUTCOMMAND)
  __DECLARE_VAR(BOOL,BLOCKEDOPENCONTROL)
  TON ERRORCMDTIMER;
  TON _ERRORRESET;
  TON SDVIGRESET;
  TON CONTINUEHOLDCOMMANDTIMER;
  TOF OUTPUTSSETS;
  R_TRIG DP_TRIG;
  R_TRIG DP_TRIG_RELIABILITY;
  R_TRIG RESETBLOCKEDOPENCONTROL_TRIG;

} FB_KRAN;

void FB_KRAN_init__(FB_KRAN *data__, BOOL retain);
// Code part
void FB_KRAN_body__(FB_KRAN *data__);
// FUNCTION_BLOCK FB_OILPUMP
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,STATON)
  __DECLARE_VAR(BOOL,STATOFF)
  __DECLARE_VAR(BOOL,STATON_RELIABILITY)
  __DECLARE_VAR(BOOL,STATOFF_RELIABILITY)
  __DECLARE_VAR(STRUCT_OILPUMP,STRSW)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INNS)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INACCIDENT)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INLOCAL)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INDISTANCE)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INBREAKCMDON)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INBREAKCMDOFF)
  __DECLARE_VAR(BOOL,CMDON)
  __DECLARE_VAR(BOOL,CMDOFF)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,ONINIT)
  __DECLARE_VAR(BOOL,_STATON)
  __DECLARE_VAR(BOOL,_STATOFF)
  __DECLARE_VAR(BOOL,GETSDVIG)
  __DECLARE_VAR(BYTE,LASTONSTATUS)
  __DECLARE_VAR(BYTE,CMD)
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,LASTCMD)
  __DECLARE_VAR(BYTE,SOURCE_FOR_STATUS)
  __DECLARE_VAR(BYTE,CMD_FOR_STATUS)
  __DECLARE_VAR(BYTE,COMMAND_ERROR_FOR_STATUS)
  FB_SUNPACKERCOMMAND _SUNPACKERCOMMAND;
  __DECLARE_VAR(TYPE_STATUSDUALINPUT,_STATUSDUALINPUT)
  __DECLARE_VAR(TYPE_COMMANDDUALINPUT,_COMMANDDUALINPUT)
  __DECLARE_VAR(BOOL,_COMMANDERRORTIMER)
  __DECLARE_VAR(BOOL,RESETERRORTIMER)
  __DECLARE_VAR(BOOL,_CHANGWITHOUTCOMMAND)
  TON ERRORCMDTIMER;
  TON SDVIGRESET;
  TON _ERRORRESET;
  TOF OUTPUTSSETS;

} FB_OILPUMP;

void FB_OILPUMP_init__(FB_OILPUMP *data__, BOOL retain);
// Code part
void FB_OILPUMP_body__(FB_OILPUMP *data__);
// FUNCTION_BLOCK FB_SECTIONSWITCH
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,STATON)
  __DECLARE_VAR(BOOL,STATOFF)
  __DECLARE_VAR(BOOL,STATON_RELIABILITY)
  __DECLARE_VAR(BOOL,STATOFF_RELIABILITY)
  __DECLARE_VAR(STRUCT_SECTIONSWITCH,STRSW)
  __DECLARE_VAR(TYPE_RELIABLEBIT,BASKETROLLEDIN)
  __DECLARE_VAR(TYPE_RELIABLEBIT,BASKETROLLEDOUT)
  __DECLARE_VAR(TYPE_RELIABLEBIT,BASKETTEST)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INNS)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INOFFKNA)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INACCIDENT)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INLOCAL)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INDISTANCE)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INBREAKCMDON)
  __DECLARE_VAR(TYPE_RELIABLEBIT,INBREAKCMDOFF)
  __DECLARE_VAR(BOOL,CMDON)
  __DECLARE_VAR(BOOL,CMDOFF)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,ONINIT)
  __DECLARE_VAR(BOOL,_STATON)
  __DECLARE_VAR(BOOL,_STATOFF)
  __DECLARE_VAR(BOOL,GETSDVIG)
  __DECLARE_VAR(BYTE,LASTONSTATUS)
  __DECLARE_VAR(BYTE,CMD)
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,LASTCMD)
  __DECLARE_VAR(BYTE,SOURCE_FOR_STATUS)
  __DECLARE_VAR(BYTE,CMD_FOR_STATUS)
  __DECLARE_VAR(BYTE,COMMAND_ERROR_FOR_STATUS)
  __DECLARE_VAR(TYPE_RELIABLEBIT,_BASKETROLLEDIN)
  __DECLARE_VAR(TYPE_RELIABLEBIT,_BASKETROLLEDOUT)
  __DECLARE_VAR(TYPE_RELIABLEBIT,_BASKETTEST)
  FB_SUNPACKERCOMMAND _SUNPACKERCOMMAND;
  __DECLARE_VAR(TYPE_STATUSDUALINPUT,_STATUSDUALINPUT)
  __DECLARE_VAR(TYPE_BASKETSTATS,_STATUSBASKET)
  __DECLARE_VAR(TYPE_COMMANDDUALINPUT,_COMMANDDUALINPUT)
  __DECLARE_VAR(BOOL,_COMMANDERRORTIMER)
  __DECLARE_VAR(BOOL,RESETERRORTIMER)
  __DECLARE_VAR(BOOL,_CHANGWITHOUTCOMMAND)
  TON ERRORCMDTIMER;
  TON _ERRORRESET;
  TON SDVIGRESET;
  TOF OUTPUTSSETS;

} FB_SECTIONSWITCH;

void FB_SECTIONSWITCH_init__(FB_SECTIONSWITCH *data__, BOOL retain);
// Code part
void FB_SECTIONSWITCH_body__(FB_SECTIONSWITCH *data__);
// FUNCTION_BLOCK FB_SINGLEOUTPUT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,SIGNAL)
  __DECLARE_VAR(STRUCT_SINGLEOUTPUT,STR_SO)

  // FB private variables - TEMP, private and located variables
  TON PULSETIMER;
  TON RESETCMDTIMER;
  TON TON_COMMAND;
  __DECLARE_VAR(BYTE,SOURCE)
  __DECLARE_VAR(BYTE,CMD)
  __DECLARE_VAR(BYTE,LASTCMD)
  __DECLARE_VAR(BYTE,SOURCE_FOR_STATUS)
  __DECLARE_VAR(BYTE,CMD_FOR_STATUS)
  __DECLARE_VAR(BYTE,COMMAND_ERROR_FOR_STATUS)
  __DECLARE_VAR(BOOL,PULSETIMERPRIZNAK)
  __DECLARE_VAR(BOOL,RESETCMDTIMERPRIZNAK)
  FB_SUNPACKERCOMMAND _SUNPACKERCOMMAND;

} FB_SINGLEOUTPUT;

void FB_SINGLEOUTPUT_init__(FB_SINGLEOUTPUT *data__, BOOL retain);
// Code part
void FB_SINGLEOUTPUT_body__(FB_SINGLEOUTPUT *data__);
// FUNCTION_BLOCK FB_SINGLESIGNAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(TYPE_RELIABLEBIT,SIGNAL)
  __DECLARE_VAR(STRUCT_SINGLESIGNAL,STR_SS)

  // FB private variables - TEMP, private and located variables
  TON TIMERON;
  TOF TIMEROFF;

} FB_SINGLESIGNAL;

void FB_SINGLESIGNAL_init__(FB_SINGLESIGNAL *data__, BOOL retain);
// Code part
void FB_SINGLESIGNAL_body__(FB_SINGLESIGNAL *data__);
// FUNCTION_BLOCK PROC_IM
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  FB_KRAN FB_KRAN1;
  FB_KRAN FB_KRAN4;
  FB_KRAN FB_KRAN2;
  FB_KRAN FB_KRAN3;
  FB_OILPUMP FB_NU;
  FB_OILPUMP FB_NU2;
  FB_SECTIONSWITCH FB_MV;
  FB_SECTIONSWITCH FB_SECTIONSWITCH1;
  FB_SWITCH FB_AVOM1;
  FB_SWITCH FB_AVOM2;
  FB_SWITCH FB_AVOM3;
  FB_SWITCH FB_AVOM4;
  FB_SINGLEOUTPUT FB_SO0;
  FB_SINGLEOUTPUT FB_SO1;
  FB_SINGLEOUTPUT FB_SO2;
  FB_SINGLEOUTPUT FB_SO3;
  FB_SINGLEOUTPUT FB_SO4;
  FB_SINGLEOUTPUT FB_SO5;
  FB_SINGLEOUTPUT FB_SO6;
  FB_SINGLEOUTPUT FB_SO7;
  FB_SINGLESIGNAL FB_SI0;
  FB_SINGLESIGNAL FB_SI1;
  FB_SINGLESIGNAL FB_SI2;
  FB_SINGLESIGNAL FB_SI3;
  FB_SINGLESIGNAL FB_SI4;
  FB_SINGLESIGNAL FB_SI5;
  FB_SINGLESIGNAL FB_SI6;
  __DECLARE_EXTERNAL(DICONFIG,DI)
  __DECLARE_EXTERNAL(DOCONFIG,OD)
  __DECLARE_EXTERNAL(IMCONFIG,IM)

} PROC_IM;

void PROC_IM_init__(PROC_IM *data__, BOOL retain);
// Code part
void PROC_IM_body__(PROC_IM *data__);
// FUNCTION_BLOCK PROC_DO_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,INIT)
  __DECLARE_VAR(UINT,INITIALES)

  // FB private variables - TEMP, private and located variables
  FB_DO_INIT STDO_INI;
  __DECLARE_VAR(UINT,INITS)
  __DECLARE_EXTERNAL(DOCONFIG,OD)

} PROC_DO_INIT;

void PROC_DO_INIT_init__(PROC_DO_INIT *data__, BOOL retain);
// Code part
void PROC_DO_INIT_body__(PROC_DO_INIT *data__);
// FUNCTION_BLOCK OPC_IM_SET
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(IMCONFIG,IM)
  __DECLARE_EXTERNAL(UDINT,IM_KRAN1_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_KRAN4_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_KRAN2_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_KRAN3_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_NU_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_NU2_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_AVOM1_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_AVOM2_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_AVOM3_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_AVOM4_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_MV_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_SECTIONSWITCH1_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_SINGLESIGNALS_SI0_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_SINGLESIGNALS_SI1_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_SINGLESIGNALS_SI2_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_SINGLESIGNALS_SI3_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_SINGLESIGNALS_SI4_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_SINGLESIGNALS_SI5_STATUS)
  __DECLARE_EXTERNAL(UDINT,IM_SINGLESIGNALS_SI6_STATUS)

} OPC_IM_SET;

void OPC_IM_SET_init__(OPC_IM_SET *data__, BOOL retain);
// Code part
void OPC_IM_SET_body__(OPC_IM_SET *data__);
// FUNCTION_BLOCK OPC_IM_GET
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(IMCONFIG,IM)
  __DECLARE_EXTERNAL(UINT,IM_KRAN1_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_KRAN4_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_KRAN2_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_KRAN3_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_NU_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_NU2_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_AVOM1_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_AVOM2_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_AVOM3_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_AVOM4_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_MV_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,IM_SECTIONSWITCH1_INCOMMAND_ARM)

} OPC_IM_GET;

void OPC_IM_GET_init__(OPC_IM_GET *data__, BOOL retain);
// Code part
void OPC_IM_GET_body__(OPC_IM_GET *data__);
// FUNCTION_BLOCK OPC_AI_SET
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(AICONFIG,AI)
  __DECLARE_EXTERNAL(LREAL,AI_A1_HW)
  __DECLARE_EXTERNAL(LREAL,AI_A1_HA)
  __DECLARE_EXTERNAL(LREAL,AI_A1_LA)
  __DECLARE_EXTERNAL(LREAL,AI_A1_LW)
  __DECLARE_EXTERNAL(LREAL,AI_A1_HL)
  __DECLARE_EXTERNAL(LREAL,AI_A1_LL)
  __DECLARE_EXTERNAL(LREAL,AI_A1_VALUE)
  __DECLARE_EXTERNAL(UDINT,AI_A1_STATUS)
  __DECLARE_EXTERNAL(LREAL,AI_A2_HW)
  __DECLARE_EXTERNAL(LREAL,AI_A2_HA)
  __DECLARE_EXTERNAL(LREAL,AI_A2_LA)
  __DECLARE_EXTERNAL(LREAL,AI_A2_LW)
  __DECLARE_EXTERNAL(LREAL,AI_A2_HL)
  __DECLARE_EXTERNAL(LREAL,AI_A2_LL)
  __DECLARE_EXTERNAL(LREAL,AI_A2_VALUE)
  __DECLARE_EXTERNAL(UDINT,AI_A2_STATUS)

} OPC_AI_SET;

void OPC_AI_SET_init__(OPC_AI_SET *data__, BOOL retain);
// Code part
void OPC_AI_SET_body__(OPC_AI_SET *data__);
// FUNCTION_BLOCK PROC_DO
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  FB_DOSOURCEMLP FB_DO1;
  FB_DOSOURCEMLP FB_DO2;
  FB_DOSOURCEMLP FB_DO3;
  FB_DOSOURCEMLP FB_DO4;
  FB_DOSOURCEMLP FB_DO5;
  __DECLARE_EXTERNAL(DOCONFIG,OD)
  __DECLARE_EXTERNAL(TWORDDATA,ARDOUT_0)
  __DECLARE_EXTERNAL(TWORDDATA,ARDOUT_1)
  __DECLARE_EXTERNAL(TWORDDATA,ARDOUT_2)
  __DECLARE_EXTERNAL(TWORDDATA,ARDOUT_3)
  __DECLARE_EXTERNAL(TWORDDATA,ARDOUT_4)
  __DECLARE_EXTERNAL(UINT,DO_0_WVALUE)
  __DECLARE_EXTERNAL(UINT,DO_1_WVALUE)
  __DECLARE_EXTERNAL(UINT,DO_2_WVALUE)
  __DECLARE_EXTERNAL(UINT,DO_3_WVALUE)
  __DECLARE_EXTERNAL(UINT,DO_4_WVALUE)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_1)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_2)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_3)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_4)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_5)

} PROC_DO;

void PROC_DO_init__(PROC_DO *data__, BOOL retain);
// Code part
void PROC_DO_body__(PROC_DO *data__);
// FUNCTION_BLOCK PROC_DI_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,INIT)
  __DECLARE_VAR(UINT,INITIALES)

  // FB private variables - TEMP, private and located variables
  FB_DI_INIT STDI_INI;
  __DECLARE_VAR(UINT,INITS)
  __DECLARE_EXTERNAL(DICONFIG,DI)

} PROC_DI_INIT;

void PROC_DI_INIT_init__(PROC_DI_INIT *data__, BOOL retain);
// Code part
void PROC_DI_INIT_body__(PROC_DI_INIT *data__);
// FUNCTION_BLOCK OPC_PROTECTIONS_SET
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(PROTECTIONSCONFIG,PROTECTIONS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_AP1_STATUS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_AIP1_STATUS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_AIP2_STATUS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_AIP3_STATUS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_DIP1_STATUS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_DIP2_STATUS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_DIP3_STATUS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_DIP4_STATUS)
  __DECLARE_EXTERNAL(UDINT,PROTECTIONS_DIP5_STATUS)

} OPC_PROTECTIONS_SET;

void OPC_PROTECTIONS_SET_init__(OPC_PROTECTIONS_SET *data__, BOOL retain);
// Code part
void OPC_PROTECTIONS_SET_body__(OPC_PROTECTIONS_SET *data__);
// FUNCTION_BLOCK OPC_PROTECTIONS_GET
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  __DECLARE_EXTERNAL(PROTECTIONSCONFIG,PROTECTIONS)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_AP1_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_AIP1_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_AIP2_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_AIP3_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_DIP1_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_DIP2_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_DIP3_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_DIP4_INCOMMAND_ARM)
  __DECLARE_EXTERNAL(UINT,PROTECTIONS_DIP5_INCOMMAND_ARM)

} OPC_PROTECTIONS_GET;

void OPC_PROTECTIONS_GET_init__(OPC_PROTECTIONS_GET *data__, BOOL retain);
// Code part
void OPC_PROTECTIONS_GET_body__(OPC_PROTECTIONS_GET *data__);
// FUNCTION_BLOCK FB_DISOURCEMLP
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(TITEMDIN,ARDIN)
  __DECLARE_VAR(TITEMDIN,ERR_MOD)
  __DECLARE_VAR(STRUCT_DI,STRDI)
  __DECLARE_VAR(BOOL,BOUNCE)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(WORD,_VALUE)
  __DECLARE_VAR(BOOL,_RELIABILITY)
  __DECLARE_VAR(INT,BITNUMBER)
  __DECLARE_VAR(INT,BITNUM)

} FB_DISOURCEMLP;

void FB_DISOURCEMLP_init__(FB_DISOURCEMLP *data__, BOOL retain);
// Code part
void FB_DISOURCEMLP_body__(FB_DISOURCEMLP *data__);
// FUNCTION_BLOCK PROC_PROTECTIONS_INIT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,INIT)
  __DECLARE_VAR(UINT,INITIALES)

  // FB private variables - TEMP, private and located variables
  FB_DIPROTECTION_INIT STDIP_INI;
  FB_AIPROTECTION_INIT STAIP_INI;
  __DECLARE_VAR(UINT,INITS)
  __DECLARE_EXTERNAL(PROTECTIONSCONFIG,PROTECTIONS)
  __DECLARE_VAR(TYPE_PROTECTIONTAGS,_PROTECTIONTAGS)
  __DECLARE_VAR(TYPE_STATUSAI,_STATUSAI)

} PROC_PROTECTIONS_INIT;

void PROC_PROTECTIONS_INIT_init__(PROC_PROTECTIONS_INIT *data__, BOOL retain);
// Code part
void PROC_PROTECTIONS_INIT_body__(PROC_PROTECTIONS_INIT *data__);
// FUNCTION_BLOCK PROC_DI
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)

  // FB private variables - TEMP, private and located variables
  FB_DISOURCEMLP FB_DI;
  FB_DISOURCEMLP FB_DI1;
  FB_DISOURCEMLP FB_DI2;
  FB_DISOURCEMLP FB_DI3;
  FB_DISOURCEMLP FB_DI4;
  __DECLARE_EXTERNAL(DICONFIG,DI)
  __DECLARE_EXTERNAL(TITEMDIN,ARDIN_0)
  __DECLARE_EXTERNAL(TITEMDIN,ARDIN_1)
  __DECLARE_EXTERNAL(TITEMDIN,ARDIN_2)
  __DECLARE_EXTERNAL(TITEMDIN,ARDIN_3)
  __DECLARE_EXTERNAL(TITEMDIN,ARDIN_4)
  __DECLARE_EXTERNAL(UDINT,DI_0_1_WVALUE)
  __DECLARE_EXTERNAL(UDINT,DI_2_3_WVALUE)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_1)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_2)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_3)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_4)
  __DECLARE_EXTERNAL(TITEMDIN,ARERR_5)

} PROC_DI;

void PROC_DI_init__(PROC_DI *data__, BOOL retain);
// Code part
void PROC_DI_body__(PROC_DI *data__);
// PROGRAM PROGRAM0
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(DINT,VAR0)

} PROGRAM0;

void PROGRAM0_init__(PROGRAM0 *data__, BOOL retain);
// Code part
void PROGRAM0_body__(PROGRAM0 *data__);
#endif //__POUS_H
#include <beremiz/beremiz.h>
